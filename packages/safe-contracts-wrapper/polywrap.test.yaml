name: safe-wrapper-test
format: "0.1"
validation: "./workflows/validator.cue"
jobs:
  cases: 
    steps:
    - uri: ens/abi.stub.eth
      method: abi_1_2_0
      args: {}
    - uri: ens/abi.stub.eth
      method: bytecode_1_2_0
      args: {}
    - uri: ens/abi.stub.eth
      method: abi_1_3_0
      args: {}
    - uri: ens/abi.stub.eth
      method: bytecode_1_3_0
      args: {}
    - uri: ens/wraps.eth:ethereum@2.0.0
      method: deployContract
      args:
        abi: $cases.0.data
        bytecode: $cases.1.data
        options:
          maxPriorityFeePerGas: "40000000"
          maxFeePerGas: "4000000000"
        connection: 
          networkNameOrChainId: "testnet"
    - uri: ens/wraps.eth:ethereum@2.0.0
      method: deployContract
      args:
        abi: $cases.2.data
        bytecode: $cases.3.data
        options:
          maxPriorityFeePerGas: "40000000"
          maxFeePerGas: "4000000000"
        connection:
          networkNameOrChainId: "testnet"
    - uri: fs/build
      method: createProxy
      args:
        address: $cases.4.data
        safeMasterCopyAddress: $cases.4.data
        initializer: "0x"
        saltNonce: 0
        txOptions:
          gasPrice: "4000000000"
          gasLimit: "200000"
        connection:
          networkNameOrChainId: "testnet"
    - uri: fs/build
      method: createProxy
      args:
        address: $cases.5.data
        safeMasterCopyAddress: $cases.5.data
        initializer: "0x"
        saltNonce: 1
        txOptions:
          gasPrice: "4000000000"
          gasLimit: "200000"
        connection:
          networkNameOrChainId: "testnet"
    jobs:
      proxyCreationCode:
        steps:
        - uri: fs/build
          method: proxyCreationCode
          args:
            address: $cases.5.data
            connection:
              networkNameOrChainId: "testnet"
      estimateGas:
        steps:
        - uri: fs/build
          method: estimateGas
          args:
            address: $cases.5.data
            method: "function createProxyWithNonce(address _singleton, bytes memory initializer, uint256 saltNonce)"
            args: [ $cases.5.data, "0x", "2" ]
            connection:
              networkNameOrChainId: "testnet"
      encode:
        steps:
        - uri: fs/build
          method: encode
          args:
            method: "function createProxyWithNonce(address _singleton, bytes memory initializer, uint256 saltNonce)"
            args: [ $cases.5.data, "0x", "3" ]
