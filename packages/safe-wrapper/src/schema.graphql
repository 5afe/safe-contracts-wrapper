#import { Module } into SafeContracts from "wrap://ipfs/QmUaomUYZp5b7rEuCtqB5Lbwozds8krvVZokqYpdTut8W7"
#import { Module, Connection, TxOverrides, TxReceipt } into Ethereum from "wrap://ens/ethereum.polywrap.eth"
#import { Module } into Logger from "wrap://ens/js-logger.polywrap.eth"

type Env {
    safeAddress: String!
    connection: Ethereum_Connection!
}

type SafeTransaction {
    data: String!
    to: String!
    value: String!
    operation: UInt8
    signatures: Map @annotate(type: "Map<String!, String!>")

    safeTxGas: BigInt
    baseGas: BigInt
    gasPrice: BigInt
    gasToken: String
    refundReceiver: String
    nonce: BigInt
    # TODO: add txOverrides
}

type Module {
    """Owner manager methods"""
    getOwners: [String!]! @env(required: true)
    getThreshold: UInt32! @env(required: true)
    isOwner(ownerAddress: String!): Boolean! @env(required: true)
    encodeAddOwnerWithThresholdData(ownerAddress: String!, threshold: UInt32): String! @env(required: true)
    encodeRemoveOwnerData(ownerAddress: String!, threshold: UInt32): String! @env(required: true)
    encodeSwapOwnerData(oldOwnerAddress: String!, newOwnerAddress: String!): String! @env(required: true)
    encodeChangeThresholdData(threshold: UInt32!): String! @env(required: true)

    """Module manager methods"""
    getModules: [String!]! @env(required: true)
    isModuleEnabled(moduleAddress: String!): Boolean! @env(required: true)
    encodeEnableModuleData(moduleAddress: String!): String! @env(required: true)
    encodeDisableModuleData(moduleAddress: String!): String! @env(required: true)

    """Transaction manager methods"""
    createTransaction(tx: SafeTransaction!): SafeTransaction!
    addSignature(tx: SafeTransaction!): SafeTransaction! @env(required: true)
    getTransactionHash(
        tx:SafeTransaction!
    ): String @env(required: true)

    getHashSignature(
        hash: String!
    ): String @env(required: true)

    getBytesArray(
        hash: String!
    ): Bytes @env(required: true)

    getHashedMessage(
        bytes: Bytes!
    ): String! @env(required: true)

    adjustSignature(
        signature: String!
        txHash: String!
    ): String! @env(required: true)
}
